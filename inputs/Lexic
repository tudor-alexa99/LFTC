Lexic.txt

Alphabet:

a. Upper (A-Z) and lower case letters (a-z) of the English alphabet

       b. Underline character '_';

       c. Decimal digits (0-9);

Lexic:

      a.Special symbols, representing:

- operators:
	cand_e_frate_langa_frate // + 
	am_bani_de_dat	//	- 
	se_inmultesc_banii // 	* 
	dau_cutit	//	/ 
	dusmanii_mei	//	 < 
	dusmanii_mei_noi	// 	<= 
	declar_scandal	//	= 
	valoare_din_aia_mare	//	>
	valoare_din_aia_mare_noua 	// 	>=

- separators [ ] { }  : ; space

- reserved words (describing "versuri de manele"):

    lista // array

	fara_numar // string 
	
	unicul // const 
	
	se_stie	// boolean
	
	hai_tati  //  do 

	daca_ploua_nu_ma_ploua  //  if 

	ori_nai_vrut_ori_nai_stiut  //	else 
	
	valuta  //	int 

	oftez  //  of

	sa_inceapa_cheful	// begin

	gata_schimb_foaia_cu_toti // program 
	
	adio_plictiseala	// 	end
	
	citesc_si_plang // read 

	vaileu  //  var 

	fara_numar_fara_numar  //	while 

	e_scris_in_stele  //	write
	
	ma_intorc_blindat_de_bani	//	return
	
	numai_minciuni	//	false
	
	adevarat	//	true

      b.identifiers

  -a sequence of letters and  digits, such that the first character is a letter; the rule is:

    identifier ::= letter | letter{letter}{digit}

    letter ::= "A" | "B" | . ..| "Z" | "a" | "b" | ... | "z"

    non_zero_digit ::= "1" |...| "9" 
	
	digit ::= "0" | "1" |...| "9" 


      c.constants
	  1.integer - rule:

      noconst:=+no|-no|no

      no:=non_zero_digitdigit{digit}{no}

2.character

    character:='letter'|'digit'

3.string

      constchar:="string"

      string:=char{string}

      char:=letter|digit

